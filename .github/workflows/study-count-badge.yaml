name: Update Study Count Badge

on:
  schedule:
    # Run every Sunday at 00:00 UTC
    - cron: '0 0 * * 0'
  workflow_dispatch: # Allow manual triggering

jobs:
  update-study-count:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install EDirect tools
      run: |
        # Install EDirect tools for esearch/efetch/xtract
        wget -O edirect.tar.gz "ftp://ftp.ncbi.nlm.nih.gov/entrez/entrezdirect/edirect.tar.gz"
        tar -xzf edirect.tar.gz
        sudo mv edirect /opt/
        echo "/opt/edirect" >> $GITHUB_PATH

        wget -O xtract.gz "ftp://ftp.ncbi.nlm.nih.gov/entrez/entrezdirect/xtract.Linux.gz"
        gunzip -f xtract.gz
        chmod +x xtract
        sudo mv xtract /opt/edirect
        
        wget -O transmute.gz "ftp://ftp.ncbi.nlm.nih.gov/entrez/entrezdirect/transmute.Linux.gz"
        gunzip -f transmute.gz
        chmod +x transmute
        sudo mv transmute /opt/edirect

    - name: Verify EDirect commands are available
      run: |
        set -euo pipefail
        echo "PATH: $PATH"
        for cmd in esearch efetch xtract; do
          printf "Checking %s... " "$cmd"
          if ! command -v "$cmd" >/dev/null 2>&1; then
            echo "NOT FOUND" >&2
            echo "Error: $cmd not found on PATH after installation." >&2
            exit 1
          fi
          echo "OK ($(command -v "$cmd"))"
        done

    - name: Get study count and IDs
      id: count
      run: |
        set -euo pipefail
        # Run the esearch command to get unique study IDs
        STUDY_IDS=$(esearch -db sra -query '"q2-ena-uploader"[All Fields]' | \
          efetch -format xml | \
          xtract -pattern "STUDY_REF/*" -block IDENTIFIERS -element PRIMARY_ID)
        
        SAMPLE_COUNT=$(printf "%s\n" "$STUDY_IDS" | wc -l)
        STUDY_IDS=$(printf "%s\n" "$STUDY_IDS" | sort -u)
        
        # Count only non-empty lines to avoid counting a blank line as 1; use awk to avoid non-zero exit when empty
        STUDY_COUNT=$(printf "%s\n" "$STUDY_IDS" | awk 'NF{c++} END{print c+0}')
        
        echo "Study count: $STUDY_COUNT"
        echo "Sample count: $SAMPLE_COUNT"
        echo "Found study IDs:"
        echo "$STUDY_IDS"
        
        # Fail the workflow if the study count is empty or zero
        if [ -z "${STUDY_COUNT:-}" ] || [ "$STUDY_COUNT" -eq 0 ]; then
          echo "Error: No ENA studies found for query 'q2-ena-uploader'." 1>&2
          exit 1
        fi
        
        # Save outputs for later steps
        echo "study-count=$STUDY_COUNT" >> $GITHUB_OUTPUT
        echo "sample-count=$SAMPLE_COUNT" >> $GITHUB_OUTPUT
        echo "ids<<EOF" >> $GITHUB_OUTPUT
        echo "$STUDY_IDS" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Update CSV tracking file
      run: |
        # Current study count and date
        STUDY_COUNT="${{ steps.count.outputs.study-count }}"
        SAMPLE_COUNT="${{ steps.count.outputs.sample-count }}"
        CURRENT_DATE=$(date '+%Y-%m-%d')
        
        # Create CSV file if it doesn't exist
        if [ ! -f "study-count-history.csv" ]; then
          echo "date,study-count,sample-count" > study-count-history.csv
        fi
        
        # Add new entry to CSV
        echo "${CURRENT_DATE},${STUDY_COUNT},${SAMPLE_COUNT}" >> study-count-history.csv

    - name: Update README badge
      run: |
        # Current study count
        STUDY_COUNT="${{ steps.count.outputs.study-count }}"
        
        # Create badge URL
        BADGE_URL="https://img.shields.io/badge/ENA%20Studies-${STUDY_COUNT}-blue"
        BADGE_MARKDOWN="![ENA Studies](${BADGE_URL})"
        
        # Check if badge already exists in README
        if grep -q "!\[ENA Studies\]" README.md; then
          # Update existing badge
          sed -i "s|!\[ENA Studies\]([^)]*)|${BADGE_MARKDOWN}|g" README.md
        else
          # Add new badge after the existing badges
          sed -i '/!\[Code style: black\]/a\'"${BADGE_MARKDOWN}" README.md
        fi

    - name: Commit and push changes
      env:
        GH_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
      run: |
        git config --local user.email "bokulich-lab@ethz.ch"
        git config --local user.name "BOTulich"

        git remote set-url origin https://${{ env.GH_TOKEN }}@github.com/bokulich-lab/q2-ena-uploader.git
        
        # Add both files to git
        git add README.md study-count-history.csv
        
        # Check if there are any changes to commit
        if git diff --cached --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update ENA studies count to ${{ steps.count.outputs.count }} and add historical data"
          git push
        fi
